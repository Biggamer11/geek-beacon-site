upstream geekbeacon_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server ##GUNICORNSOCKDIR##/gunicorn.sock fail_timeout=0;
}

server {
    listen 80;
    listen 443;
    server_name www.geekbeacon.org geekbeacon.org;

    root ##DJANGODIR##; 
    index index.html

    # Redirect everythig to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    client_max_body_size 50m;

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    ssl on;
    ssl_session_timeout 5m;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    ssl_dhparam /etc/nginx/certs/dhparams.pem;

    ssl_certificate   ##SSLCERTIFICATE##;
    ssl_certificate_key ##SSLKEY##;

    resolver 8.8.8.8;
    ssl_stapling on;
    ssl_trusted_certificate ##SSLCERTIFICATE##;
    
    # These probably need adjusting
    access_log /srv/log/nginx-access.log;
    error_log /srv/log/nginx-error.log;

    # Static files
    location /static/ {
        alias ##STATICDIR##;
        autoindex off;
    }

    location /media/ {
        alias ##MEDIADIR##;
        autoindex off;
    }

    # Transfer to Django
    location / {
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_header X-CSRFToken;
        add_header Front-End-Https on;
        proxy_redirect off;  
        proxy_pass http://geekbeacon_server;
    }
}

